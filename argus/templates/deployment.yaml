apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    chart: "argus"
{{- if .Values.labels}}
{{ toYaml .Values.labels| indent 4 }}
{{- end }}
{{- if .Values.annotations }}
  annotations:
{{ toYaml .Values.annotations | indent 4 }}
{{- end }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
{{- if .Values.labels}}
{{ toYaml .Values.labels| indent 8 }}
{{- end }}
{{- if .Values.annotations }}
      annotations:
{{ toYaml .Values.annotations | indent 8 }}
{{- end }}
    spec:
      securityContext: {{ include "lmutil.pod-sec-context-nonroot" (list . "lmutil.custom-pod-sec-context-nonroot") | nindent 8 }}
      serviceAccountName: {{ .Release.Name }}
    {{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
    {{- end }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName | quote }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      containers:
      - name: argus
        securityContext: {{ include "lmutil.container-sec-context-nonroot" (list . "lmutil.custom-container-sec-context-nonroot") | nindent 12 }}
        image: "{{ .Values.imageRepository }}:{{ default "latest" .Values.imageTag }}"
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        {{- if .Values.resources }}
        resources:
{{ toYaml .Values.resources | indent 10}}
        {{- end}}
        args:
          - watch
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: ACCESS_ID
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}
              key: accessID
        - name: ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}
              key: accessKey
        - name: ACCOUNT
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}
              key: account
        - name: ETCD_DISCOVERY_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}
              key: etcdDiscoveryToken
        {{- if .Values.proxyUser }}
        - name: PROXY_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}
              key: proxyUser
        {{- end }}
        {{- if .Values.proxyPass }}
        - name: PROXY_PASS
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}
              key: proxyPass
        {{- end }}
